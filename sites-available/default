server {
    # IPv4アドレスで80番ポートをリッスン
    listen 80;

    # IPv6アドレスで80番ポートをリッスン
    listen [::]:80;

    # ディレクトリにアクセスされた際に表示するインデックスファイルを指定
    index index.html index.htm index.nginx-debian.html;

    # root
    root /usr/share/nginx/html;

    # URIに基づいてリクエストを処理
    location /cpp/ {
        allow 192.168.96.0/24;  # Dockerネットワーク全体を許可
        allow 127.0.0.1;        # ローカルホスト
        allow 192.168.1.0/24;   # 自宅Wi-Fiネットワーク
        deny all;

        # リファラーによる制限(/tg/のみ許可)
        valid_referers server_names
                        ~/tg/;
        if ($invalid_referer) {
            return 403;
        }

        proxy_pass http://192.168.1.12:3030/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /monitor/ {
        allow 192.168.96.0/24;  # Dockerコンテナネットワーク
        allow 127.0.0.1;        # ローカルホスト
        allow 192.168.1.0/24;   # 自宅Wi-Fiネットワーク
        deny all;

        proxy_pass http://py_monitor:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /tg/ {
        allow 192.168.96.0/24;  # Dockerコンテナネットワーク
        allow 127.0.0.1;        # ローカルホスト
        allow 192.168.1.0/24;   # 自宅Wi-Fiネットワーク

        deny all;

        proxy_pass http://py_TG_fe:3020/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # / へアクセスした時の設定
    location / {
        try_files $uri $uri/ =404;
    }
}